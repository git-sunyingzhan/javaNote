1、进制
	二进制
		逢二进一，由0和1组成，比如0110
	八进制
		逢八进一，由0~7组成，比如137
	十进制
	十六进制
		逢16进一，由0~9、a~f(A~F)组成，比如a1b2
	说明：
		为了区分数据，jdk1.7规定数据前面需要添加前缀
		二进制数，前缀0b，比如0b1001
		八进制数，前缀0，比如0616
		16进制数，前缀0x，比如0x100
2、进制转换
	十进制转二进制
		将十进制数除以二，一直除到商为0为止。二进制数为余数由上往下的拼接值
	二进制转十进制
		先为每位数做个标号（标号从低位到高位，从0开始，依次+1），然后算出每位数*2^标号累加的和
		简单方法：8421码
			从低位到高位，依次给每位数标记1、2、4、8......，最后将1对应的标号进行相加
	二进制转八进制
		从低位到高位，每三个二进制数为一个整体，最高位不足的补零。然后算出每个整体的十进制数，最后将这些数进行拼接
	二进制转十六进制
		从低位到高位，每四个二进制数为一个整体，最高位不足的补零。然后算出每个整体的十进制数（10~15写成A~F），最后将这些数进行拼接
3、原码、反码和补码
	原码：
		最高位是符号位（1：负数，0：正数），其他位是数值位
	反码：
		正数，反码和原码一致
		负数，最高位不变，其他位取反
	补码：
		正数，反码和原码一致
		负数，补码=反码+1
	tips:
		计算机是以二进制补码形式存储或者计算数据
4、键盘录入
	可以在控制台录入数据，并获取控制台录入的数据
	步骤1：
		导包		import
	步骤2：
		创建Scanner对象
	步骤3：
		使用方法
5、运算符
	1）算数运算符
		+、-、*、/(整除)、%(取模)、++(自增+1)、--（自减-1）
	说明：
		1>在运算的时候，数据的类型要保持一致。同类型数据运算后返回同类型的结果
		2>byte、short、char在参与运算的时候，会默认转换成int类型再进行计算
		3>Java运算时，不会检查溢出
		4>++（--）可以写在变量的前面，也可以写在变量的后面
			如果++、--单独出现。在变量前，在后对结果值没有影响
			如果++、--参与其他操作
				在前，先执行++（--）操作，后执行其他操作
				在后，限制性其他操作，再执行++（--）操作
	2)比较运算符
		>、>=、<、<=、==(等于)、!=(不等于)
		结果值只能是boolean类型
	3）逻辑运算符
		&(与)、|(或)、！(非)、&&(双与)、||(双或)
		&、|和&&、||的区别：
			它们都可以作为逻辑运算符、
			&、&&：
				&: 无论前面的条件是否满足，后面的操作都需要执行
				&&:如果前面的条件不成立，后面的操作不需要执行
			|、||：
				|: 无论前面的条件是否满足，后面的操作都需要执行
				||:如果前面的条件不成立，后面的操作不需要执行
			所以&&、||比&、|效率高，建议开发中使用&&和||
			&和|还可以作为位运算符
	4）赋值运算符
		=、+=、-=、*=、/=、%=
	5)三目（三元）运算符
		格式：
			条件表达式？表达式1：表达式2
		说明：
			条件表达式值为true，返回表达式1的结果值
			条件表达式值为false，返回表达式2的结果值
	6)位运算符(效率最高)
		前提：先将数据转换成二级制再运算
		<<(左移)：将数据向左移动指定位置
		>>(有符号右移)：将数据向右边移动指定位数。最高位1，补1；最高位0，补0；
		>>>(无符号右移)：将数据向右移动指定位置，前面不足的补0；
		&(位与)：每一位数进行与操作，都是1，结果才是1；只要有一个为0，结果为0
		|(位或)：每一位数进行或运算，只要有一个为1，结果就为1；
		^(异或)：每一位数进行异或操作，一个为1，另一个位0，结果才为1，否则结果为0
		~（取反）：按位进行取反

		
作业：
		控制台录入一个三位数，计算输出个位、十位、百位上的数，并计算获取其中的最大值，并将最大值打印输出
		