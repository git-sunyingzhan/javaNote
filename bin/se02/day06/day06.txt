1、注解
	给程序的说明，给计算机看的
	注释：用文字描述程序，给程序员看的
	定义：注解（Annotation），也叫元数据。一种代码级别的说明。是jdk1.5新增的特性，与类、接口、枚举是在同一个层次。
	它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明。
	作用分类：
		①编写文档：通过代码里标识的元数据生成文档【生成doc文档】
		②代码分析：通过代码里标识的元数据对代码进行分析【使用反射】
		③编译检查：通过代码里标识的元数据让编译器能够实现基本的编译检查【Override】
2、预定义注解
	@Override					检查该注解标识的方法是否继承父类
	@Deprecated					该注解标识的方法以过时
	@SuppressWarnings			压制警告
	@SuppressWarnings("all")	压制所有警告
	
3、自定义注解
	格式：
		原注解
		public @interface 注解名{
			属性列表（抽象方法）;
		}
	本质：就是一个接口，继承了Annotation接口。
		比如：public @interface Anno{}本质上就是 public interface Anno extends Annotation{}
	说明：
		1）属性的返回值类型的取值范围。基本数据类型，String、枚举、注解、以上类型的数组类型。
		2）定义了属性，在使用的时候，需要对属性进行赋值。
			如果注解里面只有一个属性value，在使用注解的时候，value可以省略。
			数组赋值，值使用{}包围，如果只有一个值，{}可以省略。
4、原注解
	用来描述注解的注解
	@Target			描述注解能够作用的位置
		ElementTpye[] value()
		ElementTpye：枚举
			常量有：
				TYPE:作用在类上
				METHOD：作用在方法上
				FIELD：作用在成员变量上
	@Retention：描述注解被保留的阶段
		RetentionPolicy value()
		RetentionPolicy：枚举
			常量有：
				SOURCE:源码阶段
				CLASS：字节码阶段
				RUNTING：运行阶段
	@Documented:描述注解是否被抽取到API doc文档中
	@Inherited：描述注解是否被子类继承
5、函数式编程思想
	在数学中，函数指的是，给定一个输入值，通过一套计算方案，最终获取一个输出值。也就是说，拿什么东西做什么事。
	面向对象强调了必须要通过对象的形式来做某事，重视的是做某件事的过程。
	函数式编程强调做什么，而不强调以什么方式去做，重视的是做事的结果。
6、Lambda编程
	格式
		(参数类型 参数名)->{代码块}
	说明：
		()：里面的参数为函数式接口内抽象方法定义的参数。
		->：代表指向动作，前面的参数被用于后面的代码块。
		代码块：抽象方法重写操作。
7、函数式接口
	适用于函数式编程环境（Lambda）
	1）接口中只能有一个抽象方法，可以有默认方法和私有方法
	2）需要在接口上添加@FunctionalInterface
8、Lambda续
	Lambda强调的是做什么而不是做么做，所以凡是通过上下文推到得知的信息，都可以省略。
	1）省略规则
		1.小括号里面参数类型可以省略
		2.小括号里面只有一个参数，小括号可以省略
		3.如果大括号里面只有一句话，不论是否有返回值，都可以省略大括号。如果存在return，return可以省略，语句结尾的；需要删除。
	2)Lambda延迟执行
		有些场景代码执行后，结果不一定使用，这时候就造成了性能的浪费。而Lambda具有延迟执行的特性，可以很好的解决这个问题。
	3)使用Lamdba作为参数和返回值
9、公共函数式接口
	从jdk1.8开始提供function包，该包针对用户可能用到的函数式接口做了一个公共的接口。
	最核心的四个接口为
		1）功能型接口Function<T,R>
			抽象方法：R apply(T t)
			默认方法：Function andThen(Function func):将当前Function调用apply方法获取到的返回值作为after调用apply时的参数
		2)消费型接口Consumer<T>
			抽象方法：void accept(T t);
			默认方法：Consumer andThen(Consumer con):先执行this的accept操作，然后执行other对象的accept操作
		3）供给型接口Supplier<T>
			抽象方法：T get();
		4)断言型接口Predicate<T>
			抽象方法：boolean test(T t);
			默认方法：and与、or或、negate非、